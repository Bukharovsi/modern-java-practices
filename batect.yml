containers:
  build-env:
    image: eclipse-temurin:17-jdk-focal
    environment:
      # See:
      # - https://docs.gradle.org/6.8/userguide/gradle_daemon.html#sec:disabling_the_daemon
      # - https://docs.gradle.org/6.8/userguide/build_environment.html#sec:configuring_jvm_memory
      JAVA_OPTS: -Xmx512m -XX:MaxMetaspaceSize=256m
    run_as_current_user:
      enabled: true
      home_directory: /home/container-user
    volumes:
      - local: .
        container: /code
        options: cached
      - local: ~/.gradle
        container: /home/container-user/.gradle
        options: cached
      - local: ~/.m2
        container: /home/container-user/.m2
        options: cached
    working_directory: /code

tasks:
  # NB -- local build need "clean", but CI (GitHub actions) does not:
  # Docker copies in the local repo clone, including any artifacts such as
  # build/ or target/ directories; CI starts from a fresh clone
  build-with-gradle:
    description: Build and test with Gradle
    run:
      container: build-env
      command: ./gradlew --no-daemon --warning-mode=all clean build
  build-with-maven:
    description: Build and test with Maven
    run:
      container: build-env
      command: ./mvnw --no-transfer-progress clean verify
  run-with-gradle:
    description: Runs the demo program assuming a Gradle build
    run:
      container: build-env
      command: ./run.sh -B gradle
  run-with-maven:
    description: Runs the demo program assuming a Maven build
    run:
      container: build-env
      command: ./run.sh -B maven
  shell:
    description: Open a shell in the container
    run:
      container: build-env
      command: /bin/bash
